class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        
        vector<vector<int>>ans;

        priority_queue<vector<int>>pq;

        for(auto it:points)
        {
            int x=it[0];
            int y=it[1];

            int dist=(x*x)+(y*y);

            pq.push({dist,x,y});

            if(pq.size()>k) pq.pop();
        }

        
        while(!pq.empty())
        {
            vector<int>temp=pq.top();
            vector<int>lol;

            lol.push_back(temp[1]);
            lol.push_back(temp[2]);

            ans.push_back(lol);

            pq.pop();
            
        }
     
     return ans;

    }
};
