
    vector<int> replaceWithRank(vector<int> &arr, int n){
        
        vector<int>ans;
        
        map<int,int>mp;
        
        vector<int>v=arr;
        
        sort(v.begin(),v.end());
        
        int cnt=1;
        
        for(int i=0;i<n;i++)
        {
            if(mp.find(v[i])==mp.end())  // not seen before
            {
                mp[v[i]]=cnt;
                cnt++;
            }
        }
        
        for(int i=0;i<n;i++)
        {
            ans.push_back(mp[arr[i]]);
        }
        
        return ans;

    }

      




-------------------------------------------------------------------------------------------------------------------------------------------------------------------

typedef pair<int,int> pi;

class Solution{
public:

    vector<int> replaceWithRank(vector<int> &arr, int n){
       
       priority_queue<pi,vector<pi>,greater<pi>>pq;
       
       for(int i=0;i<n;i++)
       {
           pq.push({arr[i],i});
       }
       
       vector<int>ans(n);
       
       int i=1;
       int prev=pq.top().first;
       
       while(!pq.empty())
       {
           if(prev!=pq.top().first) i++;
           
           prev=pq.top().first;
           int pos=pq.top().second;
           
           pq.pop();
           
           ans[pos]=i;
       }
       
       
       return ans;

    }

};
